Module `0-add_integer

Function ``add_integer(a, b=98)`` defines the addition of two arguments.
It is expected to be used with integer or float values

   >>> add_integer = __import__('0-add_integer').add_integer

It works with positive integers

   >>> add_integer(4, 12)
   16
   >>> add_integer(3, 0)
   3

Or, negative integers

   >>> add_integer(-4, 2)
   -2
   >>> add_integer(-1, -1)
   -2

Float numbers (positive or negative) will be treated as integers

   >>> add_integer(3.14, 1)
   4
   >>> add_integer(1, -3.14)
   -2
   >>> add_integer(-3.2, -2.3)
   -5

If the second parameter is missing, value 98 will be used as default

   >>> add_integer(1)
   99
   >>> add_integer(-8)
   90

In case of more than two arguments, a TypeError is raised
   >>> add_integer(1, 2 ,3)
   Traceback (most recent call last):
   TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

If one or both arguments are not int or float a TypeError is raised

   >>> add_integer("Hi", 1)
   Traceback (most recent call last):
   TypeError: a must be an integer
   
   >>> add_integer(1, "Hi")
   Traceback (most recent call last):
   TypeError: b must be an integer

   >>> add_integer("Hi", "There")
   Traceback (most recent call last):
   TypeError: a must be an integer


   >>> add_integer(None)
   Traceback (most recent call last):
   TypeError: a must be an integer


   >>> add_integer(not_defined)
   Traceback (most recent call last):
   NameError: name 'not_defined' is not defined
